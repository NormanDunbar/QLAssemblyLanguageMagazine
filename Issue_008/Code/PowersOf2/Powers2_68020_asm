; This code finds the value of the "Next Power of Two" for any
; given number. The first few results are:
;
; Call here with one (long) parameter.
; PRINT PEEK_L(start + 2) for the result.

start   bra.s   doit
result  ds.l    1

doit    lea result,a1       ; Result address
        move.l d1,d0        ; Passed parameter
        subq.l #1,d0        ; D0 might be a power of 2
        bfffo d0{0:32},d1   ; Find first 1 bit

; If we find a set bit, D1 has the "offset". Bit 31 = offset 0,
; bit 30 = offset 1 and so on. The bits are numbered from the
; MSB which is not the normal manner. To convert, subtract the
; offset from 31 to get the required bit number.

        neg.l d1            ; D1 = -D1
        add.l #31,d1        ; Same as subtracting!
        addq.l #1,d1        ; Just because!
        moveq #0,d2         ; For the result
        bset d1,d2          ; Set the result bit.
        move.l d2,(a1)      ; Save the result

done
        clr.l d0
        rts

